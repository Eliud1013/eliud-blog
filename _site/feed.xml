

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/</id>
  <title>Elixir1013</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-10-07T14:37:54-07:00</updated>
  <author>
    <name>Eliud</name>
    <uri>/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> Â© 2024 Eliud </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>HTB: Escape Writeup</title>
    <link href="/posts/Escape/" rel="alternate" type="text/html" title="HTB: Escape Writeup" />
    <published>2024-10-05T05:00:00-07:00</published>
  
    <updated>2024-10-05T05:00:00-07:00</updated>
  
    <id>/posts/Escape/</id>
    <content src="/posts/Escape/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="CTF" />
    
  

  <summary>Scape is a Medium Windows AD machine. It starts with an SMB share exposing a PDF containing MSSQL credentials. The attacker forces MSSQL to authenticate and captures a crackable hash. With these credentials, they gain command execution using WinRM. Further enumeration reveals user credentials, and a vulnerable certificate template (ESC1) allows the attacker to request a certificate for the Admi...</summary>

  </entry>

  
  <entry>
    <title>Cheat Sheet: net Command</title>
    <link href="/posts/CheatSheet-net-Command/" rel="alternate" type="text/html" title="Cheat Sheet: net Command" />
    <published>2024-09-19T05:00:00-07:00</published>
  
    <updated>2024-09-20T01:29:13-07:00</updated>
  
    <id>/posts/CheatSheet-net-Command/</id>
    <content src="/posts/CheatSheet-net-Command/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="General" />
    
    <category term="CheatSheet" />
    
  

  <summary>The net command is a command-line tool that enables the management and configuration of various services and network resources. This cheat sheet includes the net commands that I find particularly useful.</summary>

  </entry>

  
  <entry>
    <title>HTB: Builder Writeup</title>
    <link href="/posts/Builder/" rel="alternate" type="text/html" title="HTB: Builder Writeup" />
    <published>2024-09-16T05:00:00-07:00</published>
  
    <updated>2024-09-20T01:23:41-07:00</updated>
  
    <id>/posts/Builder/</id>
    <content src="/posts/Builder/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="CTF" />
    
  

  <summary>Builder is a Medium HTB machine where we exploit Jenkins CVE-2024-23897, which allows us to read files on the server. We can retrieve user credentials by enumerating Jenkins configuration files, crack passwords using hashcat, and then use Jenkins&amp;#39; stored SSH credentials to escalate privileges.</summary>

  </entry>

  
  <entry>
    <title>HTB: Sauna Writeup</title>
    <link href="/posts/Sauna/" rel="alternate" type="text/html" title="HTB: Sauna Writeup" />
    <published>2024-09-09T05:00:00-07:00</published>
  
    <updated>2024-09-10T16:51:20-07:00</updated>
  
    <id>/posts/Sauna/</id>
    <content src="/posts/Sauna/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="CTF" />
    
  

  <summary>In this post, we&amp;#39;re resolving Sauna Machine from HackTheBox, where we&amp;#39;ll deal with an Active Directory environment. We will exploit AS-REP Roasting on a domain account, reading autologon credentials and doing some domain ACEs analysis using BloodHound, finally we will perfom a DCSync attack to escalate our privileges.</summary>

  </entry>

  
  <entry>
    <title>Insecure Deserialization: Node.js</title>
    <link href="/posts/InsecureDeserialization/" rel="alternate" type="text/html" title="Insecure Deserialization: Node.js" />
    <published>2024-09-06T05:00:00-07:00</published>
  
    <updated>2024-09-06T05:00:00-07:00</updated>
  
    <id>/posts/InsecureDeserialization/</id>
    <content src="/posts/InsecureDeserialization/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="General" />
    
  

  <summary>Insecure deserialization refers to a vulnerability where a program deserializes an attacker-controlled object representation, allowing the attacker to manipulate the structure of the object and potentially cause arbitrary code execution. In this post, we&amp;#39;re going to explore the basic serialization and deserialization process using a vulnerable library in Node.js. We&amp;#39;ll also see how insecure ser...</summary>

  </entry>

</feed>


