

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:5000/</id>
  <title>Elixir1013</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-09-14T19:22:24-07:00</updated>
  <author>
    <name>Eliud</name>
    <uri>http://localhost:5000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:5000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:5000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> Â© 2024 Eliud </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>HTB: Sauna Writeup</title>
    <link href="http://localhost:5000/posts/Sauna/" rel="alternate" type="text/html" title="HTB: Sauna Writeup" />
    <published>2024-09-09T05:00:00-07:00</published>
  
    <updated>2024-09-10T16:51:20-07:00</updated>
  
    <id>http://localhost:5000/posts/Sauna/</id>
    <content src="http://localhost:5000/posts/Sauna/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="CTF" />
    
  

  <summary>In this post, we&amp;#39;re resolving Sauna Machine from HackTheBox, where we&amp;#39;ll deal with an Active Directory environment. We will exploit AS-REP Roasting on a domain account, reading autologon credentials and doing some domain ACEs analysis using BloodHound, finally we will perfom a DCSync attack to escalate our privileges.</summary>

  </entry>

  
  <entry>
    <title>Insecure Deserialization: Node.js</title>
    <link href="http://localhost:5000/posts/InsecureDeserialization/" rel="alternate" type="text/html" title="Insecure Deserialization: Node.js" />
    <published>2024-09-06T05:00:00-07:00</published>
  
    <updated>2024-09-06T05:00:00-07:00</updated>
  
    <id>http://localhost:5000/posts/InsecureDeserialization/</id>
    <content src="http://localhost:5000/posts/InsecureDeserialization/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="General" />
    
  

  <summary>Insecure deserialization refers to a vulnerability where a program deserializes an attacker-controlled object representation, allowing the attacker to manipulate the structure of the object and potentially cause arbitrary code execution. In this post, we&amp;#39;re going to explore the basic serialization and deserialization process using a vulnerable library in Node.js. We&amp;#39;ll also see how insecure ser...</summary>

  </entry>

  
  <entry>
    <title>HTB: Nest Writeup</title>
    <link href="http://localhost:5000/posts/Nest/" rel="alternate" type="text/html" title="HTB: Nest Writeup" />
    <published>2024-09-03T05:00:00-07:00</published>
  
    <updated>2024-09-09T20:50:23-07:00</updated>
  
    <id>http://localhost:5000/posts/Nest/</id>
    <content src="http://localhost:5000/posts/Nest/" />
    <author>
      <name>Eliud</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="CTF" />
    
  

  <summary>In this post we&amp;#39;re resolving Nest machine from HackTheBox, this is cataloged as an easy Windows box where SMB guest access leads to low-privileged credentials. Dive into configuration files for sensitive info, uncover a password through source code analysis, and decrypt Administrator credentials by enumerating a custom service.</summary>

  </entry>

</feed>


